// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class lab2 {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new FirefoxDriver();
    
    baseUrl = "http://103.120.226.190/selenium-demo/git-repo";
    driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
    System.out.println(CSVUtil.class.getClassLoader().getResource("Selenium+Lab2020.csv").getPath());
    dataList = CSVUtil.readCSV(CSVUtil.class.getClassLoader().getResource("Selenium+Lab2020.csv").getPath());
    
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void lab2() {
	  
      for (String[] data : dataList) {
    	  driver.get("http://103.120.226.190/selenium-demo/git-repo");
    	  driver.manage().window().setSize(new Dimension(550, 691));
    	  driver.findElement(By.name("user_number")).click();
    	  driver.findElement(By.name("user_number")).sendKeys(data[0]);
    	  driver.findElement(By.name("password")).click();
    	  driver.findElement(By.name("password")).sendKeys(data[0].substring(4));
    	  driver.findElement(By.cssSelector(".btn")).click();
    	  driver.findElement(By.cssSelector(".p-5")).click();
    	  driver.findElement(By.cssSelector(".p-5")).click();
    	  WebElement tbody = driver.findElement(By.id("table-main"));
          List<WebElement> tds = tbody.findElements(By.tagName("td"));
          assertEquals(tds.get(1).getText(),data[1]);
      }  

      WebDriverWait wait = new WebDriverWait(driver, 30);
      wait.until(ExpectedConditions.textToBe(By.cssSelector(".mb-2:nth-child(6) > code"), "https://github.com/HUOSHANCHUN/Software-Testing-Technique.git"));
    }
  }
}
